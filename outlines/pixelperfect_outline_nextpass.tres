[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode cull_front, unshaded;
//, unshaded;

uniform vec4 outline_color : hint_color;
uniform float outline_width = 1.0;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	ALBEDO = outline_color.rgb;
	//assuming outline is white
//	if (outline_color.r > 0.5) {
//		ALPHA = 0.1;
//	} else {
//	ALPHA = 1.0;
//	}
	//preserve alpha
//	if (outline_color.r < 0.9) {
//		ALPHA = 1.0;
//	}
//	if(outline_color.a < 1.0) {
//		ALPHA = outline_color.a;
//	}
}"

[resource]
shader = SubResource( 1 )
shader_param/outline_color = Color( 1, 0.937255, 0, 1 )
shader_param/outline_width = 4.0
